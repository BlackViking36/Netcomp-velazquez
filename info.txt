Paso 1: instalar node, entorno q permite ejecutar codigo js en la maquina
Paso 2: instalar y configurar webpack y Babel
Paso 2 REAL: instalar create react app (configura automaticamente webpack y babel)
Paso 3: crear el proyecto
    -npm install -g create-react-app && create-react-app <nombre de la app>
    -npx create-react-app <nombre de la app>
//ESTO SE HACE SOLO UNA VEZ
Paso 4: entrar en la carpeta del proyecto 'cd <nombre de la app>'
Paso 5: ejecutar npm start


COMPONENTE FUNCIONAL
Crear una funcion con letra mayusculas
Exportar la funcion
Debe devolver una sola cosa
Cuando se devuelve mas de una cosa de utilizan los FRAGMENTS '<></>'


Que suele contener un componente
    -Props
    -State
    -Ciclo de vida
    -Metodos de ciclo de vida

hooks:
    -useState:permite cambiar el estado de un componente y por ende provoca un re-render
    -useEffect: permite ejecutar una funcion cuando el componente se renderiza

Ciclos de vida con class:
    -mount: componente se monta
    -update: componente se actualiza
    -unmount: componente se desmonta

    MOUNT: 
        -Constructor: se ejecuta al crear el componente
        -Render: se ejecuta al renderizar el componente
        -componentDidMount: se ejecuta al montar el componente
    
    UPDATE:
        -Render: se ejecuta al renderizar el componente
        -shouldComponentUpdate: se ejecuta antes de actualizar el componente
    
    UNMOUNT:
        -componentWillUnmount: se ejecuta antes de desmontar el componente


    useEffect(() => {}, [])

Promesas
    pending - fulfilled - rejected
